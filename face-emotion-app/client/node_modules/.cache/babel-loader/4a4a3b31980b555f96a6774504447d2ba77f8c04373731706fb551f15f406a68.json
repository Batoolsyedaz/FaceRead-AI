{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\face-emotion-app\\\\face-emotion-app\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"\");\n  const capture = async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const blob = await (await fetch(imageSrc)).blob();\n    const file = new File([blob], \"image.jpg\", {\n      type: \"image/jpeg\"\n    });\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const response = await axios.post(\"http://localhost:5000/predict\", formData);\n    const data = response.data.emotions;\n    if (data.length > 0) setEmotion(data[0].label);else setEmotion(\"No face detected\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Real-Time Emotion Detector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 320,\n      height: 240\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture & Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Emotion: \", emotion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zmVI+y7AQAxWZ1qLwHIno0Qdwss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Webcam","axios","jsxDEV","_jsxDEV","App","_s","webcamRef","emotion","setEmotion","capture","imageSrc","current","getScreenshot","blob","fetch","file","File","type","formData","FormData","append","response","post","data","emotions","length","label","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","width","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/face-emotion-app/face-emotion-app/client/src/App.jsx"],"sourcesContent":["\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const webcamRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"\");\n\n  const capture = async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n\n    const blob = await (await fetch(imageSrc)).blob();\n    const file = new File([blob], \"image.jpg\", { type: \"image/jpeg\" });\n\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    const response = await axios.post(\"http://localhost:5000/predict\", formData);\n    const data = response.data.emotions;\n\n    if (data.length > 0) setEmotion(data[0].label);\n    else setEmotion(\"No face detected\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1>ðŸ§  Real-Time Emotion Detector</h1>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={320}\n        height={240}\n      />\n      <br />\n      <button onClick={capture}>Capture & Predict</button>\n      <h2>Emotion: {emotion}</h2>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAGJ,SAAS,CAACK,OAAO,CAACC,aAAa,CAAC,CAAC;IAElD,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACJ,QAAQ,CAAC,EAAEG,IAAI,CAAC,CAAC;IACjD,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,IAAI,CAAC,EAAE,WAAW,EAAE;MAAEI,IAAI,EAAE;IAAa,CAAC,CAAC;IAElE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;IAE9B,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,CAAC;IAC5E,MAAMK,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACC,QAAQ;IAEnC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAEjB,UAAU,CAACe,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,KAC1ClB,UAAU,CAAC,kBAAkB,CAAC;EACrC,CAAC;EAED,oBACEL,OAAA;IAAKwB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClC1B,OAAA;MAAA0B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC9B,OAAA,CAACH,MAAM;MACLkC,KAAK,EAAE,KAAM;MACbC,GAAG,EAAE7B,SAAU;MACf8B,gBAAgB,EAAC,YAAY;MAC7BC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACF9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN9B,OAAA;MAAQoC,OAAO,EAAE9B,OAAQ;MAAAoB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpD9B,OAAA;MAAA0B,QAAA,GAAI,WAAS,EAACtB,OAAO;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnCID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}