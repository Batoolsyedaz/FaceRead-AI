{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\face-emotion-app\\\\face-emotion-app\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport \"./App.css\"; // Don't forget to import your CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"\");\n  const capture = async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    const blob = await (await fetch(imageSrc)).blob();\n    const file = new File([blob], \"image.jpg\", {\n      type: \"image/jpeg\"\n    });\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const response = await axios.post(\"http://localhost:5000/predict\", formData);\n    const data = response.data.emotions;\n    if (data.length > 0) setEmotion(data[0].label);else setEmotion(\"No face detected\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"\\uD83E\\uDDE0 Real-Time Emotion Detector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          width: 320,\n          height: 240\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"capture-button\",\n        onClick: capture,\n        children: \"Capture & Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"emotion-text\",\n        children: [\"Emotion: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: emotion || \"Waiting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zmVI+y7AQAxWZ1qLwHIno0Qdwss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","Webcam","axios","jsxDEV","_jsxDEV","App","_s","webcamRef","emotion","setEmotion","capture","imageSrc","current","getScreenshot","blob","fetch","file","File","type","formData","FormData","append","response","post","data","emotions","length","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","width","height","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/face-emotion-app/face-emotion-app/client/src/App.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport axios from \"axios\";\nimport \"./App.css\"; // Don't forget to import your CSS\n\nconst App = () => {\n  const webcamRef = useRef(null);\n  const [emotion, setEmotion] = useState(\"\");\n\n  const capture = async () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n\n    const blob = await (await fetch(imageSrc)).blob();\n    const file = new File([blob], \"image.jpg\", { type: \"image/jpeg\" });\n\n    const formData = new FormData();\n    formData.append(\"image\", file);\n\n    const response = await axios.post(\"http://localhost:5000/predict\", formData);\n    const data = response.data.emotions;\n\n    if (data.length > 0) setEmotion(data[0].label);\n    else setEmotion(\"No face detected\");\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"card\">\n        <h1 className=\"title\">ðŸ§  Real-Time Emotion Detector</h1>\n\n        <div className=\"webcam-wrapper\">\n          <Webcam\n            audio={false}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            width={320}\n            height={240}\n          />\n        </div>\n\n        <button className=\"capture-button\" onClick={capture}>\n          Capture & Predict\n        </button>\n\n        <h2 className=\"emotion-text\">Emotion: <span>{emotion || \"Waiting...\"}</span></h2>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}